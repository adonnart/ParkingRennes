@model ProjetParking.Models.UserParking

@{
    ViewBag.Title = "Home Page";
}

<div class="absolute">
    <div class="container">
        <form class="mt-3" id="formSeacrh">
            <div class="form-group">
                <label for="recherche">Rechercher</label>
                <input type="text" class="form-control" id="recherche" aria-describedby="recherche" placeholder="Adresse, Lieu">
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Rechercher</button>
            </div>
        </form>
    </div>
</div>

<div id="mapid"></div>

@section scripts {
    <script type="text/javascript">

        var mymap = L.map('mapid').setView([48.112, -1.684], 13);

        $('#mapid').height($(window).height() - 70);

        var parkingIcon = L.icon({
            iconUrl: 'https://img.icons8.com/color/48/000000/parking.png',

            iconSize: [30, 30], // size of the icon
            iconAnchor: [15, 15], // point of the icon which will correspond to marker's location
            popupAnchor: [0, -18] // point from which the popup should open relative to the iconAnchor
        });

        L.tileLayer('https://maps.heigit.org/openmapsurfer/tiles/roads/webmercator/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
            maxZoom: 18,
            id: 'mapbox.streets',
            accessToken: 'your.mapbox.access.token'
        }).addTo(mymap);

        var markers = L.layerGroup();
        mymap.addLayer(markers);

        var circles = L.layerGroup();
        mymap.addLayer(circles);

        var wsg84 = '48.114,-1.683, 1000';

        updateMap(null);

        function onMapClick(e) {
            circles.clearLayers();
            wsg84 = e.latlng.lat + ',' + e.latlng.lng + ',500';
            updateMap(wsg84);
            var marker = L.marker([e.latlng.lat, e.latlng.lng]).addTo(mymap);
            var circle = L.circle([e.latlng.lat, e.latlng.lng], {
                color: '#ff9999',
                fillColor: '#ffcccc',
                fillOpacity: 0.5,
                radius: 500
            }).addTo(mymap);
            circles.addLayer(circle);
            circles.addLayer(marker);
        }

        mymap.on('click', onMapClick);

        function updateMap(wsg) {
            $.get("https://data.rennesmetropole.fr/api/records/1.0/search/?dataset=export-api-parking-citedia", { 'geofilter.distance': wsg },
                function (data, status) {
                    var records = data.records;
                    markers.clearLayers();
                    var first = null;
                    console.log(records);

                    for (var i = 0; i < records.length; i++) {
                        var record = data.records[i];
                        var x = record.geometry.coordinates[1];
                        var y = record.geometry.coordinates[0];
                        var marker = L.marker([x, y], { icon: parkingIcon }).addTo(mymap);
                        marker.bindPopup("<b>" + record.fields.key + "</b><br>" + record.fields.free + "/" + record.fields.max +
                            "<br><span class='badge badge-success'>" + record.fields.status + "</span><br>" +
                            "<form action='/' method='post' class='mt-3'>" +
                            "<input id='parkingName' name='parkingName' type='hidden' value='" + record.fields.key + "' />" +
                            "<input type='submit' value='Choisir' class='btn btn-primary' />" +
                            "</form>").openPopup();
                        markers.addLayer(marker);
                        if (i == 0) {
                            first = marker;
                        }
                    };
                    if (first != null) {
                        first.openPopup();
                    }
                });
        }

        mymap.invalidateSize();

        $('#formSeacrh').submit(function (e) {
            e.preventDefault();
            $.get("https://api.opencagedata.com/geocode/v1/json?q=" + $('#recherche').val() + "&key=5b590915216c4680bb6bf799921cf73b",
                function (data, status) {
                    console.log(data.results[0].geometry);
                    circles.clearLayers();
                    wsg84 = data.results[0].geometry.lat + ',' + data.results[0].geometry.lng + ',500';
                    updateMap(wsg84);
                    var marker = L.marker([data.results[0].geometry.lat, data.results[0].geometry.lng]).addTo(mymap);
                    var circle = L.circle([data.results[0].geometry.lat, data.results[0].geometry.lng], {
                        color: '#ff9999',
                        fillColor: '#ffcccc',
                        fillOpacity: 0.5,
                        radius: 500
                    }).addTo(mymap);
                    circles.addLayer(circle);
                    circles.addLayer(marker);
                });
        });

    </script>
}